{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,wCAAwC","sourcesContent":["/// <reference types=\"@capacitor/cli\" />\n\nexport interface Config {\n  /**\n   * Flag indicating that you are responsible for drawing the background color for the system bars.\n   * If `false` it will fallback to the default colors for the system bars.\n   *\n   * @example true\n   * @default true\n   */\n  customColorsForSystemBars?: boolean;\n  /**\n   * Specifies the background color of the status bar.\n   * Should be in the format `#RRGGBB` or `#AARRGGBB`.\n   * Will only have effect if `customColorsForSystemBars` is set to `true`.\n   *\n   * @example '#000000'\n   * @default '#000000'\n   */\n  statusBarColor?: string;\n  /**\n   * Specifies the color of the content (i.e. icon color) in the status bar.\n   *\n   * @example 'light'\n   * @default 'light'\n   */\n  statusBarContent?: 'light' | 'dark';\n  /**\n   * Specifies the background color of the navigation bar.\n   * Should be in the format `#RRGGBB` or `#AARRGGBB`.\n   * Will only have effect if `customColorsForSystemBars` is set to `true`.\n   *\n   * @example '#000000'\n   * @default '#000000'\n   */\n  navigationBarColor?: string;\n  /**\n   * Specifies the color of the content (i.e. icon color) in the navigation bar.\n   *\n   * @example 'light'\n   * @default 'light'\n   */\n  navigationBarContent?: 'light' | 'dark';\n  /**\n   * Specifies the offset to be applied to the safe area insets.\n   * This means that if the safe area top inset is 30px, and the offset specified is 10px,\n   * the safe area top inset will be exposed as being 40px.\n   * Usually you don't need this, but on iOS the safe area insets are mostly offset a little more\n   * by itself already. So you might want to compensate for that on Android. It's totally up to you.\n   * The offset will be applied if Edge-to-Edge mode is enabled only.\n   *\n   * @example 0\n   * @default 0\n   */\n  offset?: number;\n}\n\ndeclare module '@capacitor/cli' {\n  export interface PluginsConfig {\n    /**\n     * For ease of use and speed, these configuration values are available:\n     */\n    SafeArea?: {\n      /**\n       * Flag indicating whether of not the plugin should be enabled from startup.\n       *\n       * @example true\n       * @default false\n       */\n      enabled?: boolean;\n      /**\n       * Flag indicating that you are responsible for drawing the background color for the system bars.\n       * If `false` it will fallback to the default colors for the system bars.\n       *\n       * @example true\n       * @default true\n       */\n      customColorsForSystemBars?: boolean;\n      /**\n       * Specifies the background color of the status bar.\n       * Should be in the format `#RRGGBB` or `#AARRGGBB`.\n       * Will only have effect if `customColorsForSystemBars` is set to `true`.\n       *\n       * @example '#000000'\n       * @default '#000000'\n       */\n      statusBarColor?: string;\n      /**\n       * Specifies the color of the content (i.e. icon color) in the status bar.\n       *\n       * @example 'light'\n       * @default 'light'\n       */\n      statusBarContent?: 'light' | 'dark';\n      /**\n       * Specifies the background color of the navigation bar.\n       * Should be in the format `#RRGGBB` or `#AARRGGBB`.\n       * Will only have effect if `customColorsForSystemBars` is set to `true`.\n       *\n       * @example '#000000'\n       * @default '#000000'\n       */\n      navigationBarColor?: string;\n      /**\n       * Specifies the color of the content (i.e. icon color) in the navigation bar.\n       *\n       * @example 'light'\n       * @default 'light'\n       */\n      navigationBarContent?: 'light' | 'dark';\n      /**\n       * Specifies the offset to be applied to the safe area insets.\n       * This means that if the safe area top inset is 30px, and the offset specified is 10px,\n       * the safe area top inset will be exposed as being 40px.\n       * Usually you don't need this, but on iOS the safe area insets are mostly offset a little more\n       * by itself already. So you might want to compensate for that on Android. It's totally up to you.\n       * The offset will be applied if Edge-to-Edge mode is enabled only.\n       *\n       * @example 0\n       * @default 0\n       */\n      offset?: number;\n    };\n  }\n}\n\nexport interface SafeAreaPlugin {\n  enable(options: { config: Config }): Promise<void>;\n\n  disable(options: { config: Config }): Promise<void>;\n}\n"]}